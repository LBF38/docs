"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[1782],{49613:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var r=n(59496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=d(n),c=a,k=m["".concat(p,".").concat(c)]||m[c]||s[c]||i;return n?r.createElement(k,l(l({ref:t},u),{},{components:n})):r.createElement(k,l({ref:t},u))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},61195:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return c},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return s}});var r=n(665),a=n(40151),i=(n(59496),n(49613)),l=["components"],o={},p="Configuration",d={unversionedId:"docs/references/core/configuration",id:"docs/references/core/configuration",title:"Configuration",description:"Usage",source:"@site/docs/docs/references/core/configuration.md",sourceDirName:"docs/references/core",slug:"/docs/references/core/configuration",permalink:"/docs/references/core/configuration",draft:!1,editUrl:"https://github.com/logto-io/docs/tree/master/docs/docs/references/core/configuration.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"\ud83e\uddf1 Core Service",permalink:"/docs/references/core/"},next:{title:"\ud83d\udcc1 API Resource",permalink:"/docs/references/resources/"}},u={},s=[{value:"Usage",id:"usage",level:2},{value:"First-time setup questions",id:"questions",level:2},{value:"Variable list",id:"variable-list",level:2},{value:"General",id:"general",level:3},{value:"OIDC",id:"oidc",level:3},{value:"Supported private key types",id:"supported-private-key-types",level:4},{value:"Enabling HTTPS",id:"enabling-https",level:2},{value:"Using Node",id:"using-node",level:3},{value:"Using a HTTPS proxy",id:"using-a-https-proxy",level:3}],m={toc:s};function c(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configuration"},"Configuration"),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"Logto handles environment variables in the following order:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},".env")," file in the project root, which conforms with ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/motdotla/dotenv#readme"},"dotenv")," format"),(0,i.kt)("li",{parentName:"ul"},"System environment variable")),(0,i.kt)("p",null,"Thus the system environment variable will override the value in ",(0,i.kt)("inlineCode",{parentName:"p"},".env"),"."),(0,i.kt)("h2",{id:"questions"},"First-time setup questions"),(0,i.kt)("p",null,"For the first time you start Logto with no related environment variable, unless ",(0,i.kt)("inlineCode",{parentName:"p"},"--no-inquiry")," is specified in arguments, it'll ask several questions for a smooth experience to fulfill the minimum requirements:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If you'd like to generate a cookie keys array for the OIDC provider"),(0,i.kt)("li",{parentName:"ul"},"If you'd like to generate a private key for the OIDC provider"),(0,i.kt)("li",{parentName:"ul"},"If you'd like to set up a new Logto database"),(0,i.kt)("li",{parentName:"ul"},"Enter the ",(0,i.kt)("a",{parentName:"li",href:"https://www.postgresql.org/docs/14/libpq-connect.html#id-1.7.3.8.3.6"},"Postgres DSN"))),(0,i.kt)("p",null,"Most of them are simple yes/no questions, or you can just go with the default value, except the ",(0,i.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/14/libpq-connect.html#id-1.7.3.8.3.6"},"Postgres DSN"),"."),(0,i.kt)("p",null,"The generated private key for the OIDC provider will locate on ",(0,i.kt)("inlineCode",{parentName:"p"},"./oidc-private-key.pem"),", while other values will append to ",(0,i.kt)("inlineCode",{parentName:"p"},"./.env"),"."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"--no-inquiry")," argument is appended by default in the Docker image.")),(0,i.kt)("h2",{id:"variable-list"},"Variable list"),(0,i.kt)("h3",{id:"general"},"General"),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"If you run Logto via ",(0,i.kt)("inlineCode",{parentName:"p"},"npm start")," in the project root, ",(0,i.kt)("inlineCode",{parentName:"p"},"NODE_ENV")," will always be ",(0,i.kt)("inlineCode",{parentName:"p"},"production"),".")),(0,i.kt)("p",null,"In default values, ",(0,i.kt)("inlineCode",{parentName:"p"},"protocol")," will be either ",(0,i.kt)("inlineCode",{parentName:"p"},"http")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"https")," according to your HTTPS config."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Key"),(0,i.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"NODE_ENV"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"'production' ","|"," 'test' ","|"," undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"What kind of environment that Logto runs in.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"PORT"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"3001")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:null},"The local port that Logto listens.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"DB_URL"),(0,i.kt)("td",{parentName:"tr",align:null},"N/A"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},"The ",(0,i.kt)("a",{parentName:"td",href:"https://www.postgresql.org/docs/14/libpq-connect.html#id-1.7.3.8.3.6"},"Postgres DSN")," for Logto database.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"HTTPS_CERT_PATH"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"string ","|"," undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"See ",(0,i.kt)("a",{parentName:"td",href:"#enabling-https"},"Enabling HTTPS")," for details.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"HTTPS_KEY_PATH"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"string ","|"," undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"Ditto.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"TRUST_PROXY_HEADER"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:null},"Ditto.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"ENDPOINT"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"'protocol://localhost:$PORT'")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},"You may specify a URL with your custom domain for online testing or production. This will affect the value of the ",(0,i.kt)("a",{parentName:"td",href:"https://openid.net/specs/openid-connect-core-1_0.html#IssuerIdentifier"},"OIDC issuer identifier")," and Admin Console Redirect URIs.")))),(0,i.kt)("h3",{id:"oidc"},"OIDC"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Key"),(0,i.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"OIDC_COOKIE_KEYS"),(0,i.kt)("td",{parentName:"tr",align:null},"N/A"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"string")),(0,i.kt)("td",{parentName:"tr",align:null},"The comma-separated string list of the ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/panva/node-oidc-provider/blob/main/docs/README.md#cookieskeys"},"signing cookie keys"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"OIDC_PRIVATE_KEYS"),(0,i.kt)("td",{parentName:"tr",align:null},"N/A"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"string ","|"," undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The comma-separated string list of the private key content for ",(0,i.kt)("a",{parentName:"td",href:"https://openid.net/specs/openid-connect-core-1_0.html#Signing"},"OIDC JWT signing"),". ",(0,i.kt)("br",null)," If you'd like to set this in ",(0,i.kt)("inlineCode",{parentName:"td"},".env"),", you can leverage ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/motdotla/dotenv#multiline-values"},"multiline values")," support.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"OIDC_PRIVATE_KEY_PATHS"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"'./oidc-private-key.pem'")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"string ","|"," undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The comma-separated string list of the path to the private key file for ",(0,i.kt)("a",{parentName:"td",href:"https://openid.net/specs/openid-connect-core-1_0.html#Signing"},"OIDC JWT signing"),". ",(0,i.kt)("br",null)," Note Logto will ",(0,i.kt)("em",{parentName:"td"},"ignore")," this value if ",(0,i.kt)("inlineCode",{parentName:"td"},"OIDC_PRIVATE_KEYS")," is not empty.")))),(0,i.kt)("h4",{id:"supported-private-key-types"},"Supported private key types"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"RSA"),(0,i.kt)("li",{parentName:"ul"},"OKP (Ed25519, Ed448, X25519, X448 sub types)"),(0,i.kt)("li",{parentName:"ul"},"EC (P-256, secp256k1, P-384, and P-521 curves)")),(0,i.kt)("h2",{id:"enabling-https"},"Enabling HTTPS"),(0,i.kt)("h3",{id:"using-node"},"Using Node"),(0,i.kt)("p",null,"Node natively supports HTTPS. Provide ",(0,i.kt)("strong",{parentName:"p"},"BOTH")," ",(0,i.kt)("inlineCode",{parentName:"p"},"HTTPS_CERT_PATH")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"HTTPS_KEY_PATH")," to enable HTTPS via Node."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"HTTPS_CERT_PATH")," implies the path to your HTTPS certificate, while ",(0,i.kt)("inlineCode",{parentName:"p"},"HTTPS_KEY_PATH")," implies the path to your HTTPS key."),(0,i.kt)("h3",{id:"using-a-https-proxy"},"Using a HTTPS proxy"),(0,i.kt)("p",null,"Another common practice is to have an HTTPS proxy in front of Node (E.g. Nginx)."),(0,i.kt)("p",null,"In this case, you're likely want to set ",(0,i.kt)("inlineCode",{parentName:"p"},"TRUST_PROXY_HEADER")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," which indicates if proxy header fields should be trusted. Logto will pass the value to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/koajs/koa/blob/master/docs/api/index.md#settings"},"Koa app settings"),"."),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/panva/node-oidc-provider/blob/main/docs/README.md#trusting-tls-offloading-proxies"},"Trusting TLS offloading proxies")," for when to configure this field."))}c.isMDXComponent=!0}}]);