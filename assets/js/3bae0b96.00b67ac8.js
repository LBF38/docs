"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[83260],{49613:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(59496);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(t),d=a,f=m["".concat(c,".").concat(d)]||m[d]||l[d]||o;return t?r.createElement(f,i(i({ref:n},u),{},{components:t})):r.createElement(f,i({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},48025:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return l}});var r=t(665),a=t(40151),o=(t(59496),t(49613)),i=["components"],s={sidebar_label:"Manage via Management API",sidebar_position:2},c="Manage users using Management API",p={unversionedId:"docs/recipes/manage-users/management-api",id:"version-1.x/docs/recipes/manage-users/management-api",title:"Manage users using Management API",description:"Management API is a collection of APIs that provide access to the Logto backend service. As previously mentioned, the user API is a critical component of this service and can support a wide range of scenarios.",source:"@site/versioned_docs/version-1.x/docs/recipes/manage-users/management-api.md",sourceDirName:"docs/recipes/manage-users",slug:"/docs/recipes/manage-users/management-api",permalink:"/docs/recipes/manage-users/management-api",draft:!1,editUrl:"https://github.com/logto-io/docs/tree/master/versioned_docs/version-1.x/docs/recipes/manage-users/management-api.md",tags:[],version:"1.x",sidebarPosition:2,frontMatter:{sidebar_label:"Manage via Management API",sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Manage in Console",permalink:"/docs/recipes/manage-users/admin-console"},next:{title:"Advanced user search",permalink:"/docs/recipes/manage-users/advanced-user-search"}},u={},l=[],m={toc:l};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"manage-users-using-management-api"},"Manage users using Management API"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/references/core/#management-api"},"Management API")," is a collection of APIs that provide access to the Logto backend service. As previously mentioned, the user API is a critical component of this service and can support a wide range of scenarios."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"/docs/references/core/#authentication"},(0,o.kt)("strong",{parentName:"a"},"Authentication"))," is REQUIRED when you're calling Management API.")),(0,o.kt)("p",null,"The user-related ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Representational_state_transfer"},"RESTful"),"\nAPIs are mounted at ",(0,o.kt)("inlineCode",{parentName:"p"},"/api/users")," except the user activities, i.e., user logs ",(0,o.kt)("inlineCode",{parentName:"p"},"/api/logs?userId=:userId"),"."),(0,o.kt)("p",null,"What Admin Console can do, so do Management API."),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{href:"https://openapi.logto.io/group/endpoint-users",target:"_blank"},"API references")," for more."))}d.isMDXComponent=!0}}]);