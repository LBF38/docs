"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[5366],{49613:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var o=n(59496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),l=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||a;return n?o.createElement(f,i(i({ref:t},p),{},{components:n})):o.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},43029:function(e,t,n){n.r(t),n.d(t,{assets:function(){return w},contentTitle:function(){return C},default:function(){return S},frontMatter:function(){return b},metadata:function(){return N},toc:function(){return v}});var o=n(665),r=n(40151),a=(n(59496),n(49613)),i=["components"],c={toc:[]};function s(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"List of some specific information in ",(0,a.kt)("em",{parentName:"p"},"constant.ts"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Connector default metadata"),(0,a.kt)("li",{parentName:"ul"},"API endpoints"),(0,a.kt)("li",{parentName:"ul"},"Authorization scopes")))}s.isMDXComponent=!0;var l=["components"],p={toc:[]};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Connector's class is an implementation among ",(0,a.kt)("em",{parentName:"p"},"SMSConnector"),", ",(0,a.kt)("em",{parentName:"p"},"EmailConnector"),", and ",(0,a.kt)("em",{parentName:"p"},"SocialConnector"),"."),(0,a.kt)("p",null,"Here is an interface definition of different types of connectors."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"interface BaseConnector<T> {\n  metadata: ConnectorMetadata;\n  getConfig: GetConnectorConfig;\n  validateConfig: ValidateConfig<T>;\n}\n\ninterface SmsConnector<T> extends BaseConnector<T> {\n  sendMessage: SmsSendMessageFunction;\n  sendTestMessage?: SmsSendTestMessageFunction;\n}\n\ninterface EmailConnector<T> extends BaseConnector<T> {\n  sendMessage: EmailSendMessageFunction;\n  sendTestMessage?: EmailSendTestMessageFunction;\n}\n\nexport interface SocialConnector<T> extends BaseConnector<T> {\n  getAuthorizationUri: GetAuthorizationUri;\n  getUserInfo: GetUserInfo;\n}\n")),(0,a.kt)("p",null,"To see connector methods' definition and build a picture of connector interface design, see ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/logto-io/logto/blob/master/packages/connector-types/src/index.ts"},(0,a.kt)("inlineCode",{parentName:"a"},"@logto/connector-types")),". You can also find ",(0,a.kt)("em",{parentName:"p"},"ConnectorMetadata"),' reference at "',(0,a.kt)("a",{parentName:"p",href:"/docs/references/connectors/#connectors-local-storage-connectormetadata"},"Connectors - ConnectorMetadata"),'".'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A connector ",(0,a.kt)("inlineCode",{parentName:"li"},"validateConfig")," is obligatory for all connectors."),(0,a.kt)("li",{parentName:"ul"},"All ",(0,a.kt)("em",{parentName:"li"},"SMS Connectors")," and ",(0,a.kt)("em",{parentName:"li"},"Email Connectors")," require a ",(0,a.kt)("inlineCode",{parentName:"li"},"sendMessage")," method to call providers message sending APIs using configs from the database. Developers can choose to implement a ",(0,a.kt)("inlineCode",{parentName:"li"},"sendTestMessage")," method to send a testing message with unsaved config while setting connectors up."),(0,a.kt)("li",{parentName:"ul"},"Authorization URL generator ",(0,a.kt)("inlineCode",{parentName:"li"},"getAuthorizationUri")," and user profile retriever ",(0,a.kt)("inlineCode",{parentName:"li"},"getUserInfo")," are required for all ",(0,a.kt)("em",{parentName:"li"},"Social Connectors"),"."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"getUserInfo")," method, which can retrieve an access token with an authorization code, is expected for most ",(0,a.kt)("em",{parentName:"li"},"Social Connectors"),".")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"The methods required by connectors vary by connector type."),(0,a.kt)("p",{parentName:"admonition"},"Trying to figure out why ",(0,a.kt)("em",{parentName:"p"},"Social Connector")," requires some specific methods?",(0,a.kt)("br",null),"\nGo and check out ",(0,a.kt)("a",{parentName:"p",href:"https://oauth.net/2/"},(0,a.kt)("em",{parentName:"a"},"OAuth 2.0")," protocol"),".")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"For most of the ",(0,a.kt)("em",{parentName:"p"},"Social Connectors"),", obtaining a user profile with end-users authorization follows a two-step scheme (assume that user authorization succeeds):"),(0,a.kt)("ol",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ol"},"Fetch ",(0,a.kt)("inlineCode",{parentName:"li"},"accessToken")," by a connector vendor granted ",(0,a.kt)("inlineCode",{parentName:"li"},"authCode"),"."),(0,a.kt)("li",{parentName:"ol"},"Request for a publicly accessible user profile using ",(0,a.kt)("inlineCode",{parentName:"li"},"accessToken"),"."))))}m.isMDXComponent=!0;var u=["components"],d={toc:[]};function f(e){var t=e.components,n=(0,r.Z)(e,u);return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Typical values in ",(0,a.kt)("em",{parentName:"p"},"types.ts"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Connector config type guard"),(0,a.kt)("li",{parentName:"ul"},"Request parameter types"),(0,a.kt)("li",{parentName:"ul"},"Response parameter types"),(0,a.kt)("li",{parentName:"ul"},"Error types")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"We STRONGLY recommend using ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/colinhacks/zod"},(0,a.kt)("em",{parentName:"a"},"Zod"))," to build type guards for the connector's config, requests, and responses."),(0,a.kt)("p",{parentName:"admonition"},"Zod could be beneficial when trying to set up connectors, and a toast with detailed error messages from ZodError will show up if your config JSON is invalid.")))}f.isMDXComponent=!0;var k=["components"],h={toc:[]};function g(e){var t=e.components,n=(0,r.Z)(e,k);return(0,a.kt)("wrapper",(0,o.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Usually contains some utility functions, for example:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Alipay has its query parameters signing flow"),(0,a.kt)("li",{parentName:"ul"},"Aliyun has special escape rules")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Create this ",(0,a.kt)("em",{parentName:"p"},"utils.ts")," file as well as its UT file ",(0,a.kt)("em",{parentName:"p"},"utils.test.ts")," when it is necessary as this file is optional.")))}g.isMDXComponent=!0;var y=["components"],b={sidebar_label:"Guide to implement connectors",sidebar_position:2},C="Guide to implementing connectors",N={unversionedId:"docs/recipes/create-your-connector/connector-implementation-guide",id:"docs/recipes/create-your-connector/connector-implementation-guide",title:"Guide to implementing connectors",description:"After looking at the connector's file structure, let's discuss the implementation and main idea of developing a connector.",source:"@site/docs/docs/recipes/create-your-connector/connector-implementation-guide.mdx",sourceDirName:"docs/recipes/create-your-connector",slug:"/docs/recipes/create-your-connector/connector-implementation-guide",permalink:"/docs/recipes/create-your-connector/connector-implementation-guide",draft:!1,editUrl:"https://github.com/logto-io/docs/tree/master/docs/docs/recipes/create-your-connector/connector-implementation-guide.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Guide to implement connectors",sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Connector file structure",permalink:"/docs/recipes/create-your-connector/connector-file-structure"},next:{title:"\ud83e\ude9b Configure connectors",permalink:"/docs/recipes/configure-connectors/"}},w={},v=[{value:"Create a new account on the connector&#39;s website",id:"create-a-new-account-on-the-connectors-website",level:2},{value:"Search for the documentation which demonstrates the functionality and workflow",id:"search-for-the-documentation-which-demonstrates-the-functionality-and-workflow",level:2},{value:"Implementation and critical information composition",id:"implementation-and-critical-information-composition",level:2},{value:"constant.ts",id:"constantts",level:3},{value:"types.ts",id:"typests",level:3},{value:"utils.ts^",id:"utilsts",level:3},{value:"index.ts",id:"indexts",level:3}],T={toc:v};function S(e){var t=e.components,n=(0,r.Z)(e,y);return(0,a.kt)("wrapper",(0,o.Z)({},T,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"guide-to-implementing-connectors"},"Guide to implementing connectors"),(0,a.kt)("p",null,"After looking at the connector's file structure, let's discuss the implementation and main idea of developing a connector."),(0,a.kt)("h2",{id:"create-a-new-account-on-the-connectors-website"},"Create a new account on the connector's website"),(0,a.kt)("p",null,"Looking at the website and its console is always the first step in building a connector. You can find out some basic information about the connector provider."),(0,a.kt)("h2",{id:"search-for-the-documentation-which-demonstrates-the-functionality-and-workflow"},"Search for the documentation which demonstrates the functionality and workflow"),(0,a.kt)("p",null,"We should search for documents with different topics as connectors vary by type: ",(0,a.kt)("em",{parentName:"p"},"Social Connector")," is used to guide end-users through authorization sign-in flow, and ",(0,a.kt)("em",{parentName:"p"},"SMS/Email Connector")," is designed to call message sender APIs."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("em",{parentName:"p"},"Social Connector")," doc keyword(s): authorization flow, OAuth 2.0 (most ",(0,a.kt)("em",{parentName:"p"},"Social")," connectors follow this protocol), and obtaining user profile.",(0,a.kt)("br",null),"\n",(0,a.kt)("em",{parentName:"p"},"SMS/Email Connector")," doc keyword: integrate SMS/Email sender API.")),(0,a.kt)("h2",{id:"implementation-and-critical-information-composition"},"Implementation and critical information composition"),(0,a.kt)("h3",{id:"constantts"},"constant.ts"),(0,a.kt)(s,{mdxType:"ContentsInConstant"}),(0,a.kt)("h3",{id:"typests"},"types.ts"),(0,a.kt)(f,{mdxType:"ContentsInTypes"}),(0,a.kt)("h3",{id:"utilsts"},"utils.ts^"),(0,a.kt)(g,{mdxType:"ContentsInUtils"}),(0,a.kt)("h3",{id:"indexts"},"index.ts"),(0,a.kt)(m,{mdxType:"ContentsInIndex"}),(0,a.kt)("p",null,"Congratulations! Your connector should be ready for work after going through this guide. Try it out! \ud83d\ude80 \ud83d\ude80 \ud83d\ude80"))}S.isMDXComponent=!0}}]);