"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[4349],{49613:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(59496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),f=a,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},71029:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var r=n(665),a=n(40151),o=(n(59496),n(49613)),i=["components"],l={},s=void 0,c={unversionedId:"sdk/Swift/Logto/Structs/IdTokenClaims",id:"sdk/Swift/Logto/Structs/IdTokenClaims",title:"IdTokenClaims",description:"STRUCT",source:"@site/docs/sdk/Swift/Logto/Structs/IdTokenClaims.md",sourceDirName:"sdk/Swift/Logto/Structs",slug:"/sdk/Swift/Logto/Structs/IdTokenClaims",permalink:"/sdk/Swift/Logto/Structs/IdTokenClaims",draft:!1,editUrl:"https://github.com/logto-io/docs/tree/master/docs/sdk/Swift/Logto/Structs/IdTokenClaims.md",tags:[],version:"current",frontMatter:{},sidebar:"sdkSidebar",previous:{title:"LogtoUtilities",permalink:"/sdk/Swift/Logto/Enums/LogtoUtilities"},next:{title:"JwtHeader",permalink:"/sdk/Swift/Logto/Structs/JwtHeader"}},u={},p=[{value:"Properties",id:"properties",level:2},{value:"<code>sub</code>",id:"sub",level:3},{value:"<code>atHash</code>",id:"athash",level:3},{value:"<code>aud</code>",id:"aud",level:3},{value:"<code>exp</code>",id:"exp",level:3},{value:"<code>iat</code>",id:"iat",level:3},{value:"<code>iss</code>",id:"iss",level:3}],d={toc:p};function f(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"STRUCT")),(0,o.kt)("h1",{id:"idtokenclaims"},(0,o.kt)("inlineCode",{parentName:"h1"},"IdTokenClaims")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"public struct IdTokenClaims: Codable, Equatable\n")),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("h3",{id:"sub"},(0,o.kt)("inlineCode",{parentName:"h3"},"sub")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"public let sub: String\n")),(0,o.kt)("h3",{id:"athash"},(0,o.kt)("inlineCode",{parentName:"h3"},"atHash")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"public let atHash: String?\n")),(0,o.kt)("h3",{id:"aud"},(0,o.kt)("inlineCode",{parentName:"h3"},"aud")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"public let aud: String\n")),(0,o.kt)("h3",{id:"exp"},(0,o.kt)("inlineCode",{parentName:"h3"},"exp")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"public let exp: Int64\n")),(0,o.kt)("h3",{id:"iat"},(0,o.kt)("inlineCode",{parentName:"h3"},"iat")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"public let iat: Int64\n")),(0,o.kt)("h3",{id:"iss"},(0,o.kt)("inlineCode",{parentName:"h3"},"iss")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"public let iss: String\n")))}f.isMDXComponent=!0}}]);