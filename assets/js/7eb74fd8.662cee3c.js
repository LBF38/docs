"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[4842],{49613:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(59496);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(t),f=o,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||a;return t?r.createElement(m,i(i({ref:n},c),{},{components:t})):r.createElement(m,i({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},34630:function(e,n,t){t.d(n,{Z:function(){return i}});t(59496);var r=t(45924),o="tabItem_Fp8l",a=t(4637);function i(e){var n=e.children,t=e.hidden,i=e.className;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:t,children:n})}},82312:function(e,n,t){t.d(n,{Z:function(){return f}});var r=t(59496),o=t(45924),a=t(36258),i=t(28932),l=t(5301),u=t(61121),s="tabList_eANZ",c="tabItem_yCyO",p=t(4637);function d(e){var n,t,a=e.lazy,d=e.block,f=e.defaultValue,m=e.values,g=e.groupId,v=e.className,b=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=m?m:b.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),y=(0,i.l)(h,(function(e,n){return e.value===n.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===f?f:null!=(n=null!=f?f:null==(t=b.find((function(e){return e.props.default})))?void 0:t.props.value)?n:b[0].props.value;if(null!==k&&!h.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var O=(0,l.U)(),w=O.tabGroupChoices,T=O.setTabGroupChoices,x=(0,r.useState)(k),E=x[0],I=x[1],N=[],_=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var j=w[g];null!=j&&j!==E&&h.some((function(e){return e.value===j}))&&I(j)}var C=function(e){var n=e.currentTarget,t=N.indexOf(n),r=h[t].value;r!==E&&(_(n),I(r),null!=g&&T(g,String(r)))},D=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r,o=N.indexOf(e.currentTarget)+1;t=null!=(r=N[o])?r:N[0];break;case"ArrowLeft":var a,i=N.indexOf(e.currentTarget)-1;t=null!=(a=N[i])?a:N[N.length-1]}null==(n=t)||n.focus()};return(0,p.jsxs)("div",{className:(0,o.Z)("tabs-container",s),children:[(0,p.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},v),children:h.map((function(e){var n=e.value,t=e.label,r=e.attributes;return(0,p.jsx)("li",Object.assign({role:"tab",tabIndex:E===n?0:-1,"aria-selected":E===n,ref:function(e){return N.push(e)},onKeyDown:D,onFocus:C,onClick:C},r,{className:(0,o.Z)("tabs__item",c,null==r?void 0:r.className,{"tabs__item--active":E===n}),children:null!=t?t:n}),n)}))}),a?(0,r.cloneElement)(b.filter((function(e){return e.props.value===E}))[0],{className:"margin-top--md"}):(0,p.jsx)("div",{className:"margin-top--md",children:b.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==E})}))})]})}function f(e){var n=(0,a.Z)();return(0,p.jsx)(d,Object.assign({},e),String(n))}},91590:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return f}});var r=t(665),o=t(40151),a=(t(59496),t(49613)),i=t(34630),l=t(82312),u=["components"],s={sidebar_position:5},c="Migrate configs from env",p={unversionedId:"docs/tutorials/using-cli/migrate-from-env",id:"docs/tutorials/using-cli/migrate-from-env",title:"Migrate configs from env",description:"You can skip this page if your Logto version is greater than or equal to v1.0.0-beta.11.",source:"@site/docs/docs/tutorials/using-cli/migrate-from-env.mdx",sourceDirName:"docs/tutorials/using-cli",slug:"/docs/tutorials/using-cli/migrate-from-env",permalink:"/docs/tutorials/using-cli/migrate-from-env",draft:!1,editUrl:"https://github.com/logto-io/docs/tree/master/docs/docs/tutorials/using-cli/migrate-from-env.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docsSidebar",previous:{title:"Manage database configs",permalink:"/docs/tutorials/using-cli/manage-database-configs"},next:{title:"\ud83d\udd17 Integrate Logto in your application",permalink:"/docs/recipes/integrate-logto/"}},d={},f=[],m={toc:f};function g(e){var n=e.components,t=(0,o.Z)(e,u);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"migrate-configs-from-env"},"Migrate configs from env"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"You can skip this page if your Logto version is greater than or equal to ",(0,a.kt)("inlineCode",{parentName:"p"},"v1.0.0-beta.11"),".")),(0,a.kt)("p",null,"Managing too many environment variables are not efficient and flexible, and it\u2019s hard to keep a single source of truth when you have multiple containers running."),(0,a.kt)("p",null,"So we decided to move all possible technical configs to the database, including OIDC-related keys."),(0,a.kt)("p",null,"To make it smooth, make sure you have an original ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," file, or run the command in an environment that has the following variables:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"OIDC_PRIVATE_KEYS=some_secret_key # Or OIDC_PRIVATE_KEY_PATHS\nOIDC_COOKIE_KEYS=key1,key2\nDB_URL=postgresql://localhost:5432/logto\n")),(0,a.kt)("p",null,"Then run the command below:"),(0,a.kt)(l.Z,{groupId:"cmd",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"cli",label:"CLI",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"logto db seed oidc\n# Or\nlogto db seed oidc --env /your/path/to/.env\n"))),(0,a.kt)(i.Z,{value:"npx",label:"npx",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx @logto/cli db seed oidc\n# Or\nnpx @logto/cli db seed oidc --env /your/path/to/.env\n")))),(0,a.kt)("p",null,"If everything goes well, you will see the message like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"[info] Read config oidc.privateKeys from env\n[info] Read config oidc.cookieKeys from env\n[info] Generated config oidc.refreshTokenReuseInterval\n[info] \u2714 Seed OIDC config\n")),(0,a.kt)("p",null,"From now on, you can safely remove ",(0,a.kt)("inlineCode",{parentName:"p"},"OIDC_PRIVATE_KEYS")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"OIDC_COOKIE_KEYS")," from the environment variables. Remember to restart your Logto instance to get the changes reflected."))}g.isMDXComponent=!0}}]);