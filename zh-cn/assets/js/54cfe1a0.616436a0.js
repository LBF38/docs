"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[8210],{47837:function(n){n.exports=JSON.parse('{"blogPosts":[{"id":"build-github-sign-in-with-react-and-logto","metadata":{"permalink":"/zh-cn/tutorial/build-github-sign-in-with-react-and-logto","source":"@site/tutorial/build-with-logto/react-github.mdx","title":"How to build GitHub sign-in with React and Logto","description":"Create an application in Logto","date":"2023-03-06T05:46:03.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[{"label":"authentication","permalink":"/zh-cn/tutorial/tags/authentication"},{"label":"github","permalink":"/zh-cn/tutorial/tags/github"},{"label":"react","permalink":"/zh-cn/tutorial/tags/react"},{"label":"js","permalink":"/zh-cn/tutorial/tags/js"},{"label":"social-sign-in","permalink":"/zh-cn/tutorial/tags/social-sign-in"},{"label":"sign-in","permalink":"/zh-cn/tutorial/tags/sign-in"},{"label":"login","permalink":"/zh-cn/tutorial/tags/login"}],"readingTime":2.095,"hasTruncateMarker":false,"authors":[{"name":"Logto team","title":"Comprehensive Auth0 alternative","url":"https://logto.io","imageURL":"https://github.com/logto-io.png","key":"logto"}],"frontMatter":{"slug":"build-github-sign-in-with-react-and-logto","authors":"logto","tags":["authentication","github","react","js","social-sign-in","sign-in","login"],"title":"How to build GitHub sign-in with React and Logto"},"nextItem":{"title":"How to build Google sign-in with React and Logto","permalink":"/zh-cn/tutorial/build-google-sign-in-with-react-and-logto"}},"content":"import Intro from \'./fragments/_intro.mdx\';\\nimport CreateApplication from \'./fragments/_create-application.mdx\';\\nimport AddConnector from \'./fragments/_add-connector.mdx\';\\nimport SaveYourConfiguration from \'./fragments/_save-your-configuration.mdx\';\\nimport EnableSocialConnector from \'./fragments/_enable-social-connector.mdx\';\\nimport TestingAndValidation from \'./fragments/_testing-and-validation.mdx\';\\n\\nimport ReactIntegrateSdk from \'./_react-integrate-sdk.mdx\';\\n\\nexport const connector = \'GitHub\';\\n\\n<Intro connector={connector} sdk=\\"React\\" link=\\"https://reactjs.org/\\" />\\n\\n## Create an application in Logto\\n\\n<CreateApplication type=\\"Single Page App\\" />\\n\\n## Integrate Logto SDK\\n\\n<ReactIntegrateSdk />\\n\\n<h2>Add {connector} connector</h2>\\n\\n<AddConnector connector={connector} />\\n\\n\x3c!-- Begin of connector README --\x3e\\n\\n## Setup GitHub OAuth app\\n\\n### Sign in with GitHub account\\n\\nGo to the [GitHub website](https://github.com/) and sign in with your GitHub account. You may register a new account if you don\'t have one.\\n\\n### Create and configure OAuth app\\n\\nFollow the [creating an OAuth App](https://docs.github.com/en/developers/apps/building-oauth-apps/creating-an-oauth-app) guide, and register a new application.\\n\\nName your new OAuth application in **Application name** and fill up **Homepage URL** of the app.\\nYou can leave **Application description** field blank and customize **Authorization callback URL** as `${your_logto_origin}/callback/${connector_id}`. The `connector_id` can be found on the top bar of the Logto Admin Console connector details page.\\n\\n> Note: If you encounter the error message \\"The redirect_uri MUST match the registered callback URL for this application.\\" when logging in, try aligning the Authorization Callback URL of your GitHub OAuth App and your Logto App\'s redirect URL (of course, including the protocol) to resolve the issue.\\n\\nWe suggest not to check the box before **Enable Device Flow**, or users who sign in with GitHub on mobile devices must confirm the initial sign-in action in the GitHub app. Many GitHub users do not install the GitHub mobile app on their phones, which could block the sign-in flow. Please ignore our suggestion if you are expecting end-users to confirm their sign-in flow. See details of [device flow](https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps#device-flow).\\n\\n### Managing OAuth apps\\n\\nGo to the [OAuth Apps page](https://github.com/settings/developers) and you can add, edit or delete existing OAuth apps.\\nYou can also find `Client ID` and generate `Client secrets` in OAuth app detail pages.\\n\\n### Compose the connector JSON\\n\\nLet\'s go back to Logto. Fill out the `clientId` and `clientSecret` field with _Client ID_ and _Client Secret_ you\'ve got from OAuth app detail pages mentioned in the previous section.\\n\\nHere is an example of GitHub connector config JSON.\\n\\n```json\\n{\\n  \\"clientID\\": \\"<your-client-id>\\",\\n  \\"clientSecret\\": \\"<your-client-secret>\\"\\n}\\n```\\n\\n#### Config types\\n\\n| Name         | Type   |\\n|--------------|--------|\\n| clientId     | string |\\n| clientSecret | string |\\n\\n\x3c!-- End of connector README --\x3e\\n\\n### Save your configuraiton\\n\\n<SaveYourConfiguration connector={connector} />\\n\\n<h2>Enable {connector} connector in Sign-in Experience</h2>\\n\\n<EnableSocialConnector connector={connector} />\\n\\n## Testing and Validation\\n\\n<TestingAndValidation connector={connector} sdk=\\"React\\" />"},{"id":"build-google-sign-in-with-react-and-logto","metadata":{"permalink":"/zh-cn/tutorial/build-google-sign-in-with-react-and-logto","source":"@site/tutorial/build-with-logto/react-google.mdx","title":"How to build Google sign-in with React and Logto","description":"Create an application in Logto","date":"2023-03-06T05:46:03.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[{"label":"authentication","permalink":"/zh-cn/tutorial/tags/authentication"},{"label":"google","permalink":"/zh-cn/tutorial/tags/google"},{"label":"react","permalink":"/zh-cn/tutorial/tags/react"},{"label":"js","permalink":"/zh-cn/tutorial/tags/js"},{"label":"social-sign-in","permalink":"/zh-cn/tutorial/tags/social-sign-in"},{"label":"sign-in","permalink":"/zh-cn/tutorial/tags/sign-in"},{"label":"login","permalink":"/zh-cn/tutorial/tags/login"}],"readingTime":2.65,"hasTruncateMarker":false,"authors":[{"name":"Logto team","title":"Comprehensive Auth0 alternative","url":"https://logto.io","imageURL":"https://github.com/logto-io.png","key":"logto"}],"frontMatter":{"slug":"build-google-sign-in-with-react-and-logto","authors":"logto","tags":["authentication","google","react","js","social-sign-in","sign-in","login"],"title":"How to build Google sign-in with React and Logto"},"prevItem":{"title":"How to build GitHub sign-in with React and Logto","permalink":"/zh-cn/tutorial/build-github-sign-in-with-react-and-logto"}},"content":"import Intro from \'./fragments/_intro.mdx\';\\nimport CreateApplication from \'./fragments/_create-application.mdx\';\\nimport AddConnector from \'./fragments/_add-connector.mdx\';\\nimport SaveYourConfiguration from \'./fragments/_save-your-configuration.mdx\';\\nimport EnableSocialConnector from \'./fragments/_enable-social-connector.mdx\';\\nimport TestingAndValidation from \'./fragments/_testing-and-validation.mdx\';\\n\\nimport ReactIntegrateSdk from \'./_react-integrate-sdk.mdx\';\\n\\nexport const connector = \'Google\';\\n\\n<Intro connector={connector} sdk=\\"React\\" link=\\"https://reactjs.org/\\" />\\n\\n## Create an application in Logto\\n\\n<CreateApplication type=\\"Single Page App\\" />\\n\\n## Integrate Logto SDK\\n\\n<ReactIntegrateSdk />\\n\\n<h2>Add {connector} connector</h2>\\n\\n<AddConnector connector={connector} />\\n\\n\x3c!-- Begin of connector README --\x3e\\n\\n## Setup Google OAuth app\\n\\n### Set up a project in the Google API Console\\n\\n- Visit the [Google API Console](https://console.developers.google.com) and sign in with your Google account.\\n- Click the **Select a project** button on the top menu bar, and click the **New Project** button to create a project.\\n- In your newly created project, click the **APIs & Services** to enter the **APIs & Services** menu.\\n\\n### Configure your consent screen\\n\\n- On the left **APIs & Services** menu, click the **OAuth consent screen** button.\\n- Choose the **User Type** you want, and click the **Create** button. (Note: If you select **External** as your **User Type**, you will need to add test users later.)\\n\\nNow you will be on the **Edit app registration** page.\\n\\n### Config OAuth consent screen\\n\\n- Follow the instructions to fill out the **OAuth consent screen** form.\\n- Click **SAVE AND CONTINUE** to continue.\\n\\n### Config scopes\\n\\n- Click **ADD OR REMOVE SCOPES** and select `../auth/userinfo.email`, `../auth/userinfo.profile` and `openid` in the popup drawer, and click **UPDATE** to finish.\\n- Fill out the form as you need.\\n- Click **SAVE AND CONTINUE** to continue.\\n\\n### Add test users (External user type only)\\n\\n- Click **ADD USERS** and add test users to allow these users to access your application while testing.\\n- Click **SAVE AND CONTINUE** to continue.\\n\\nNow you should have the Google OAuth 2.0 consent screen configured.\\n\\n### Obtain OAuth 2.0 credentials\\n\\n- On the left **APIs & Services** menu, click the **Credentials** button.\\n- On the **Credentials** page, click the **+ CREATE CREDENTIALS** button on the top menu bar, and select **OAuth client ID**.\\n- On the **Create OAuth client ID** page, select **Web application** as the application type.\\n- Fill out the basic information for your application.\\n- Click **+ Add URI** to add an authorized domain to the **Authorized JavaScript origins** section. This is the domain that your logto authorization page will be served from. In our case, this will be `${your_logto_origin}`. e.g.`https://logto.dev`.\\n- Click **+ Add URI** in the ****Authorized redirect URIs**** section to set up the ****Authorized redirect URIs****, which redirect the user to the application after logging in. In our case, this will be `${your_logto_endpoint}/callback/${connector_id}`. e.g. `https://logto.dev/callback/${connector_id}`. The `connector_id` can be found on the top bar of the Logto Admin Console connector details page.\\n- Click **Create** to finish and then you will get the **Client ID** and **Client Secret**.\\n\\n### References\\n\\n#### Config types\\n\\n| Name         | Type   |\\n|--------------|--------|\\n| clientId     | string |\\n| clientSecret | string |\\n\\n#### Google developer docs\\n\\n[Google Identity: Setting up OAuth 2.0](https://developers.google.com/identity/protocols/oauth2/openid-connect#appsetup)\\n\\n\x3c!-- End of connector README --\x3e\\n\\n## Save your configuraiton\\n\\n<SaveYourConfiguration connector={connector} />\\n\\n<h2>Enable {connector} connector in Sign-in Experience</h2>\\n\\n<EnableSocialConnector connector={connector} />\\n\\n## Testing and Validation\\n\\n<TestingAndValidation connector={connector} sdk=\\"React\\" />"}]}')}}]);