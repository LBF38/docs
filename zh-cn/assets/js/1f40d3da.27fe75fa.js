"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[1165],{49613:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var n=a(59496);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(a),m=r,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return a?n.createElement(h,l(l({ref:t},c),{},{components:a})):n.createElement(h,l({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},84546:function(e,t,a){a.d(t,{Z:function(){return l}});a(59496);var n=a(45924),r="tabItem_wG3F",o=a(4637);function l(e){var t=e.children,a=e.hidden,l=e.className;return(0,o.jsx)("div",{role:"tabpanel",className:(0,n.Z)(r,l),hidden:a,children:t})}},84568:function(e,t,a){a.d(t,{Z:function(){return m}});var n=a(59496),r=a(45924),o=a(19991),l=a(97829),i=a(80721),s=a(46739),u="tabList_gma_",c="tabItem_KB2d",p=a(4637);function d(e){var t,a,o=e.lazy,d=e.block,m=e.defaultValue,h=e.values,b=e.groupId,f=e.className,g=n.Children.map(e.children,(function(e){if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=h?h:g.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),y=(0,l.l)(v,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===m?m:null!=(t=null!=m?m:null==(a=g.find((function(e){return e.props.default})))?void 0:a.props.value)?t:g[0].props.value;if(null!==k&&!v.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,i.U)(),N=w.tabGroupChoices,x=w.setTabGroupChoices,T=(0,n.useState)(k),O=T[0],I=T[1],j=[],C=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=b){var D=N[b];null!=D&&D!==O&&v.some((function(e){return e.value===D}))&&I(D)}var E=function(e){var t=e.currentTarget,a=j.indexOf(t),n=v[a].value;n!==O&&(C(t),I(n),null!=b&&x(b,String(n)))},L=function(e){var t,a=null;switch(e.key){case"Enter":E(e);break;case"ArrowRight":var n,r=j.indexOf(e.currentTarget)+1;a=null!=(n=j[r])?n:j[0];break;case"ArrowLeft":var o,l=j.indexOf(e.currentTarget)-1;a=null!=(o=j[l])?o:j[j.length-1]}null==(t=a)||t.focus()};return(0,p.jsxs)("div",{className:(0,r.Z)("tabs-container",u),children:[(0,p.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":d},f),children:v.map((function(e){var t=e.value,a=e.label,n=e.attributes;return(0,p.jsx)("li",Object.assign({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,ref:function(e){return j.push(e)},onKeyDown:L,onClick:E},n,{className:(0,r.Z)("tabs__item",c,null==n?void 0:n.className,{"tabs__item--active":O===t}),children:null!=a?a:t}),t)}))}),o?(0,n.cloneElement)(g.filter((function(e){return e.props.value===O}))[0],{className:"margin-top--md"}):(0,p.jsx)("div",{className:"margin-top--md",children:g.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))})]})}function m(e){var t=(0,o.Z)();return(0,p.jsx)(d,Object.assign({},e),String(t))}},92631:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return b},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return m}});var n=a(665),r=a(40151),o=(a(59496),a(49613)),l=a(84546),i=a(84568),s=["components"],u={sidebar_position:3},c="Database alteration",p={unversionedId:"docs/tutorials/using-cli/database-alteration",id:"docs/tutorials/using-cli/database-alteration",title:"Database alteration",description:"When developing new features, or refactoring existing ones, sometimes it is unavoidable to change database schemas.",source:"@site/docs/docs/tutorials/using-cli/database-alteration.mdx",sourceDirName:"docs/tutorials/using-cli",slug:"/docs/tutorials/using-cli/database-alteration",permalink:"/zh-cn/docs/tutorials/using-cli/database-alteration",draft:!1,editUrl:"https://github.com/logto-io/docs/tree/master/docs/docs/tutorials/using-cli/database-alteration.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Manage connectors",permalink:"/zh-cn/docs/tutorials/using-cli/manage-connectors"},next:{title:"Manage database configs",permalink:"/zh-cn/docs/tutorials/using-cli/manage-database-configs"}},d={},m=[{value:"Determine the version to deploy",id:"determine-the-version-to-deploy",level:2},{value:"Revert alterations",id:"revert-alterations",level:2},{value:"For contributors",id:"for-contributors",level:2}],h={toc:m};function b(e){var t=e.components,a=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"database-alteration"},"Database alteration"),(0,o.kt)("p",null,"When developing new features, or refactoring existing ones, sometimes it is unavoidable to change database schemas."),(0,o.kt)("p",null,"Things may sound scary, as a user, usually you need to:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Double check the difference between two or more versions"),(0,o.kt)("li",{parentName:"ul"},"Alter database in a safe and backward-compatible way"),(0,o.kt)("li",{parentName:"ul"},"Get prepared for potential failure, say have a revert script"),(0,o.kt)("li",{parentName:"ul"},"Gradually replace running Logto instances to the new verion")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Hey, we are also developers, and we know it feels unhappy to do all these risky but mandatory stuff.")," So why don't we give them to someone that won't make mistake, like a CLI?"),(0,o.kt)("p",null,"From now on, your upgrade process will be:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"logto db alt deploy")," from anywhere that can access to the database"),(0,o.kt)("li",{parentName:"ul"},"Gradually replace running Logto instances to the new verion")),(0,o.kt)("p",null,"Let's get started!"),(0,o.kt)("h2",{id:"determine-the-version-to-deploy"},"Determine the version to deploy"),(0,o.kt)("p",null,"If you have Logto CLI installed globally, it is ",(0,o.kt)("strong",{parentName:"p"},"highly recommended")," to upgrade the CLI to the latest version before deploying to get full available database alterations. Then run the command:"),(0,o.kt)(i.Z,{groupId:"cmd",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"cli",label:"CLI",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"logto db alteration deploy\n"))),(0,o.kt)(l.Z,{value:"npx",label:"npx",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npx @logto/cli db alteration deploy\n")))),(0,o.kt)("p",null,"If your database is up-to-date, you'll see the message below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"[info] Found 0 alteration to deploy\n")),(0,o.kt)("p",null,"If you have undeployed alterations, the CLI will ask you to choose the desired version:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"? Choose the alteration target version (Use arrow keys)\n> 1.0.0-beta.11\n  1.0.0-beta.10\n")),(0,o.kt)("p",null,"Theoretically, the version to deploy should match the version of your Logto instance. In the meantime, you can use the command with a target version:"),(0,o.kt)(i.Z,{groupId:"cmd",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"cli",label:"CLI",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"logto db alteration deploy 1.0.0-beta.11\n"))),(0,o.kt)(l.Z,{value:"npx",label:"npx",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npx @logto/cli db alteration deploy 1.0.0-beta.11\n")))),(0,o.kt)("p",null,"It is helpful when you'd like to do the alteration in a non-TTY pipeline, just remember to pass the database URL using ",(0,o.kt)("inlineCode",{parentName:"p"},"--db-url"),". See ",(0,o.kt)("a",{parentName:"p",href:"/docs/recipes/deployment"},"\ud83d\ude80 Deployment")," for setting up a alteration job in your cluster."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For each alteration script, the Logto CLI will run the whole script in a transaction. So if a deployment is failed, you can easily continue with the same command after the issue fixed.")),(0,o.kt)("h2",{id:"revert-alterations"},"Revert alterations"),(0,o.kt)("p",null,"Our alteration scripts also come with a ",(0,o.kt)("inlineCode",{parentName:"p"},"down")," script which can revert the changes. For now we don't have a CLI command handy, but it'll be available soon."),(0,o.kt)("p",null,"You can find all alteration scripts ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/logto-io/logto/tree/master/packages/schemas/alterations"},"in this directory"),"."),(0,o.kt)("h2",{id:"for-contributors"},"For contributors"),(0,o.kt)("p",null,"If you are developing a feature that requires database alterations, rather than updating the database schema, you also need to provide a script in the following foramt:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"next-[timestamp]-what-to-do.ts\n")),(0,o.kt)("p",null,"Check ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/logto-io/logto/tree/master/packages/schemas/alterations"},"this directory")," for reference."))}b.isMDXComponent=!0}}]);